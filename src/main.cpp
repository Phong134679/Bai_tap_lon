#include "../include/ui.h"
#include "../include/user.h"
#include "../include/database.h"
#include <cstdlib>
#include <iostream>
#include "A:/TC++/WORKING/otp/otp.h"    //đường dẫn đến otp.h
using namespace std;

int main() {
    Database db;
    string currentUsername;

    // Kết nối và tạo database
    if (!db.connect("data/users.db")) {
        showMessage("Failed to create or open database.");
        return 1;
    }

    while (true) {
        showMenu();
        char choice = getMenuChoice();
        system("cls");

        if (choice == '1') {  // LOGIN
            while (true) {
                showLoginScreen();
                string username = getInput("Please enter your username: ");
                string password = getInput("Please enter your password: ");

                User tempUser("", "", false);
                if (tempUser.loginFromDB(db, username, password)) {
                    
                currentUsername = username; // Lưu username để sử dụng trong TransactionMenu // PHẦN NÀY ĐỂ CÁ NHÂN HÓA HỆ THỐNG CHO MỖI USER

                    showMessage(">> SUCCESSFULLY LOGIN <<");
                    /*
                        DEVELOPING...
                        MOVE TO THE MAIN TRANSACTION MENU IN HERE;
                    */
                    system("pause");
                    system("cls");
                    break;  // Thoát vòng lặp đăng nhập
                } else {
                    showMessage(">> LOGIN FAILED. Please try again.\n");
                    system("pause");
                    system("cls");
                }
            }

        } else if (choice == '2') {  // REGISTER
            while (true) {
                showRegisterScreen();
                string username = getInput("Please enter your username: ");
                string password = getInput("Please enter your password: ");
                string email = getInput("Please enter your email: ");

                User newUser(username, password, false, email);
                if (newUser.validateNewUser(db)) {

                        string otp = createOTP(email);       //tạo OTP
                        if (otp.empty()) {
                            cerr << "Không thể tạo hoặc gửi OTP." << endl;      //flag kiểm tra mã OTP luôn được gửi
                        }
                    while (true) {    
                        string user_input;
                        cout << "Nhập mã OTP bạn nhận được: ";
                        getline(cin, user_input);

                        if (user_input == otp) {
                            cout << "Xác thực thành công!" << endl;
                            newUser.registerToDB(db);
                            break;
                        } else {
                            system("cls");
                            cout << "Xác thực thất bại. Mã OTP không đúng. Vui lòng nhập lại." << endl;
                        }
                    }
                    
                    showMessage(">>> SUCCESSFULLY CREATED ACCOUNT <<<");
                    system("pause");
                    system("cls");
                    break;
                } else {
                    showMessage("Invalid input or username exists!\n");
                    system("pause");
                    system("cls");
                }
            }

        } else if (choice == '3') {  // REGISTER FOR MANAGER
            showRegisterScreenForMnger();

            while (true) {
                string adminPassword = getInput("Enter admin password: ");
                if (adminPassword == "admin123") {
                    system("cls");
                    break;
                } else {
                    showMessage("WRONG PASSWORD\n");
                    system("pause");
                    system("cls");
                }
            }

            string username = getInput("Please enter your username: ");
            string email = getInput("Please enter your email: ");
            string autoPassword = User::AutoGenerated();

            User newUser(username, autoPassword, true);
            if (newUser.validateNewUser(db)) {

                string otp = createOTP(email);       //tạo OTP
                        if (otp.empty()) {
                            cerr << "Không thể tạo hoặc gửi OTP." << endl;      //flag kiểm tra mã OTP luôn được gửi
                        }
                    while (true) {    
                        string user_input;
                        cout << "Nhập mã OTP bạn nhận được: ";
                        getline(cin, user_input);

                        if (user_input == otp) {
                            cout << "Xác thực thành công!" << endl;
                            newUser.registerToDB(db);
                            break;
                        } else {
                            system("cls");
                            cout << "Xác thực thất bại. Mã OTP không đúng. Vui lòng nhập lại." << endl;
                        }
                    }

                showMessage("User created! Auto-generated password: " + autoPassword);
                system("pause");
                system("cls");
            } else {
                showMessage("Invalid input or username exists!\n");
                system("pause");
                system("cls");
            }
        }
    break;
    }

    while (true) {
    showTransactionMenu();
        char transactionChoice = getMenuChoice();
        system("cls");

        if (transactionChoice == '1') {
            showChanginPassScreen();
            while (true) {

                string currentPassword = getInput("Please enter your current password: ");
                User tempUser("", "", false);

                if (tempUser.loginFromDB(db, currentUsername, currentPassword)){  //đăng nhập lại để xác nhận người dùng
                    
                    // Lấy email từ cơ sở dữ liệu
                    string userEmail = tempUser.getUserEmail(db, currentUsername);
                    if (userEmail.empty()) {
                        showMessage("No email found for this user. Cannot send OTP.\n");
                        system("pause");
                        system("cls");
                        continue;
                    }

                    string otp = createOTP(userEmail);       //tạo OTP
                        if (otp.empty()) {
                            cerr << "Không thể tạo hoặc gửi OTP." << endl;      //flag kiểm tra mã OTP luôn được gửi
                        }
                    while (true) {
                        string user_input;
                        cout << "Nhập mã OTP bạn nhận được: ";
                        getline(cin, user_input);

                        if (user_input == otp) {
                            cout << "Xác thực thành công!" << endl;
                            break;
                        } else {
                            system("cls");
                            cout << "Xác thực thất bại. Mã OTP không đúng. Vui lòng nhập lại." << endl;
                        }
                    }

                    // đổi mk
                    string newpassword = getInput("Please enter your new password: ");
                    User user(currentUsername, newpassword, false);
                    if (user.changePassword(db, newpassword)) {
                        showMessage(">> PASSWORD CHANGED <<");
                        system("pause");
                        system("cls");
                        break;
                    } else {
                        showMessage("Failed to change password.\n");
                        system("pause");
                        system("cls");
                    }
                }    
            }    
        }
    }
    return 0;
}